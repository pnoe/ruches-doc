Pour une installation locale on peut se passer
 - du pare-feu uvw
 - du frontal apache2 et appeler directement tomcat (http://localhost:8080/ruches)

- Installation des paquets sur un serveur debian
  apt update
  apt upgrade -y
  # installation de apache, tomcat, la lib pour tomcat native apr, postgres
  #   le parefeu ufw et sudo
  # git, jdk, maven pour une génération locale du fichier war à partir des sources clonées
  apt install -y --no-install-recommends git openjdk-17-jdk maven \
    apache2 tomcat9 libtcnative-1 ufw sudo xz-utils curl postgresql \
    ntp
  apt clean

- ntp pour que le serveur reste à l'heure
  # ntp déclaration du serveur ntp.ovh.net
  sed -i '/^#server ntp.*/a server ntp.ovh.net' /etc/ntp.conf
  
- timezone
	timedatectl list-timezones | grep Paris
		Europe/Paris
	timedatectl set-timezone Europe/Paris
	ls /etc/localtime -l

- Configuration minimale du parefeu.
  On autorise tous les appels sortants et uniquement les appels entrants ssh, http et https
  /usr/sbin/ufw default deny incoming
  /usr/sbin/ufw default allow outgoing
  /usr/sbin/ufw allow 22
  /usr/sbin/ufw allow 80
  /usr/sbin/ufw allow 443
  
- Configuration apache
	# suppression des activations existantes
	rm /etc/apache2/sites-enabled/*
    Copier le fichier docs/installation/vhost.conf sous /etc/apache2/sites-available
    Activation de ce fichier :
    /usr/sbin/a2ensite vhost.conf
    Activation des modules apache ssl (https) proxy et proxy_ajp (redirect apache tomcat)
    /usr/sbin/a2enmod ssl
    /usr/sbin/a2enmod proxy
    /usr/sbin/a2enmod proxy_ajp
    
- Configuration Tomcat
   Copier le fichier docs/installation/server.xml sous /etc/tomcat9
   Copier le fichier docs/installation/context.xml sous /etc/tomcat9/Catalina/localhost/
 
- Clone des sources puis création du fichier war
  git clone https://gitlab.com/ruches/ruches.git
  cd ruches
  mvn clean package -DskipTests
- Copie du war sous tomcat
  cp target/ruches.war.original /var/lib/tomcat9/webapps/ruches.war

- Créer la base initiale :
    psql -c 'drop database ruches;'
    psql -c 'create database ruches;'
    psql -f sql/structure.sql ruches
    psql -f sql/ruches_donnees_min.sql ruches
    psql -c "alter user postgres with password 'postgres';"
- Définir les paramètres de l'application dans les fichiers 
    src/main/resources/application.properties
    et dans le context.xml Tomcat (voir exemple de context dans le répertoire docs/installation)
-- connexion à la base de données
   définir paramètres de connexion dans context.xml
-- logging.file : le chemin des fichiers log
-- accueil.titre : le titre à afficher dans le bandeau de la page d'accueil
-- ign.data.key : la clé de connexion à l'API IGN
-- gg.map.key : la clé de connexion à l'API Google maps
-- gg.map.url : l'URL de connexion à l'API Google maps
-- openweathermap.key : la clé de connexion à l'API openWeatherMap

- Authentification voir table Personne
 Un utilisateur "admin", mot de passe "admin" est défini dans ruches_donnees_min.sql
  
- Carte Google maps
  https://cloud.google.com/maps-platform/
  https://developers.google.com/maps/documentation/javascript/tutorial
-- L'affichage de ces cartes nécessite une clé
  Voir gg.map.key et gg.map.url dans application.properties ou context.xml
 
    
- Carte IGN
  https://geoservices.ign.fr/
	connexion
	créer nouveau login ign
  Créer une clé de service web :
	mon compte / mes clés de service web
	sélectionner usage gratuit des scan25/100/OACI
    mettre dans le fichier context.xml : 
    	ign.data.key="ortho,parcellaire,laclecréée"
  Création d'un fichier autoconf :
    curl "https://wxs.ign.fr/ortho/autoconf?keys=parcellaire,agriculture,essentiels,maclé&output=json&callback=callback" > autoconf.js
    
voir aussi :
https://geoservices.ign.fr/services-web
https://geoservices.ign.fr/services-web-issus-des-scans-ign
https://github.com/IGNF/geoportal-extensions/blob/develop/doc/README-openlayers.md
      
- API OpenWeatherMap
  https://openweathermap.org/appid
  créer une clé et copier cette clé dans le fichier context.xml

- Composants opensource utilisés :
  -- d3 pour les graphes de descendances des essaims https://d3js.org
  -- Bootstrap responsive design https://getbootstrap.com
  -- Datatables html tables https://datatables.net
  -- jquery http://jquery.com
  -- jquery-ui https://jqueryui.com
  -- jquery.validate https://jqueryvalidation.org
  -- chartjs graphiques javascript http://www.chartjs.org 
  -- jquery.datetimepicker https://xdsoft.net/jqplugins/datetimepicker
  -- cartes ign https://github.com/IGNF/geoportal-extensions
  -- openlayers http://openlayers.org (pour l'affichage des cartes IGN et OSM)
  -- spring boot https://projects.spring.io/spring-boot
  -- ortools pour le calcul du parcours des ruches https://developers.google.com/optimization
 - API utilisées
  -- OpenWeatherMap
  -- Google maps 
  -- Cartes et service IGN
  -- Cartes OpenStreetMap
  
  
